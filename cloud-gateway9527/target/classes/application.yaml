server:
  port: 9527

spring:
  application:
    name: cloud-gateway #以微服务注册进consul或nacos服务列表内
  cloud:
    consul: #配置consul地址
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      routes:
        - id: pay_routh1 #pay_routh1                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service              #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/get/**              # 断言，路径相匹配的进行路由
            # - Method=Get,Post
            # - Query=username,\d+
            # - Host=**.atguigu.com
            # - After=2024-03-25T22:19:00.058096900+08:00[Asia/Shanghai]
            # - Before=2024-03-25T22:22:00.058096900+08:00[Asia/Shanghai]
            # - Between=2024-03-25T22:19:00.058096900+08:00[Asia/Shanghai],2024-03-25T22:24:00.058096900+08:00[Asia/Shanghai]

        - id: pay_routh2 #pay_routh2                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由

        - id: pay_routh3
          uri: lb://cloud-payment-service # 匹配提供服务的路由地址
          predicates:
            # - Path=/XYZ/abc/{segment}           # 断言，为配合SetPath测试，{segment}的内容最后被SetPath取代
            - Path=/pay/gateway/filter/** # 断言，路径相匹配的进行路由
            # - Path=/gateway/filter/**              # 断言，为配合PrefixPath测试过滤，暂时注释掉/pay
          filters: # 这个会将配置的请求头和请求值加入到所有来访问的的HttpClientRequest中
            # - SetPath=/pay/gateway/{segment}  # {segment}表示占位符，你写abc也行但要上下一致
            # - RedirectTo=302, http://www.atguigu.com/ # 访问http://localhost:9527/pay/gateway/filter跳转到http://www.atguigu.com/
            # - PrefixPath=/pay # http://localhost:9527/pay/gateway/filter  被拆分为PrefixPath + Path
            - AddRequestHeader=X-Request-atguigu1,atguiguValue1
            - My=atguigu
#            - AddRequestHeader=X-Request-atguigu2,atguiguValue2
#            - RemoveRequestHeader=sec-fetch-site
#            - SetRequestHeader=sec-fetch-mode, Blue-updatebyllla # 将请求头sec-fetch-mode对应的值修改为Blue-updatebyzzyy
#            - AddRequestParameter=customerId,9527001 # 新增请求参数Parameter：k ，v
#            - RemoveRequestParameter=customerName   # 删除url请求参数customerName，你传递过来也是null
#            - AddResponseHeader=X-Response-atguigu, BlueResponse # 新增请求参数X-Response-atguigu并设值为BlueResponse
#            - SetResponseHeader=Date,2099-11-11 # 设置回应头Date值为2099-11-11
#            - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除


